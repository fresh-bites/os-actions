name: Trigger Shock

description: Sends a shock or vibrate command to the OpenShock API.

inputs:
  shock_id:
    description: 'The ID of the shock to trigger'
    required: true
  intensity:
    description: 'Intensity of the shock'
    required: true
  duration:
    description: 'Duration of the shock in milliseconds'
    required: true
  api_key:
    description: 'API key for authentication'
    required: true
  shock_type:
    description: 'Type of the shock (Shock or Vibrate)'
    required: false
    default: 'Shock'

runs:
  using: 'composite'
  steps:
    - name: Send Shock Command
      shell: bash
      run: |
        shock_id="${{ inputs.shock_id }}"
        intensity="${{ inputs.intensity }}"
        duration="${{ inputs.duration }}"
        api_key="${{ inputs.api_key }}"
        shock_type="${{ inputs.shock_type }}"

        unset_vars=()
    
        for var in shock_id intensity duration api_key shock_type; do
          if [ -z "${!var+x}" ] || [ -z "${!var}" ]; then
            unset_vars+=("$var")
          fi
        done
        
        if [ ${#unset_vars[@]} -ne 0 ]; then
          echo "The following inputs are unset or empty: ${unset_vars[*]}"
          exit 1
        fi

        echo "Preparing to send $shock_type with intensity: $intensity and duration: $duration milliseconds"

        url='https://api.openshock.app/2/shockers/control'
        headers="accept: application/json; OpenShockToken: $api_key; Content-Type: application/json"

        # payload=$(jq -n --arg id "$shock_id" --arg type "$shock_type" --argjson intensity "$intensity" --argjson duration "$duration" \
        # '{shocks: [{id: $id, type: $type, intensity: $intensity, duration: $duration, exclusive: true}], customName: "os-actions"}')
        payload='{
          "shocks": [
            {
              "id": "'"$shock_id"'",
              "type": "'"$shock_type"'",
              "intensity": '"$intensity"',
              "duration": '"$duration"',
              "exclusive": true
            }
          ],
          "customName": "os-actions"
        }'

        response=$(curl -v -s -w "%{http_code}" -X POST "$url" -H "$headers" -d "$payload")
        
        # Extract the body from the response (last 3 characters are the status code)
        body="${response:0:${#response}-3}"
        status_code="${response: -3}"
        
        if [ "$status_code" -eq 200 ]; then
          echo "$shock_type sent successfully."
        else
          echo "Failed to send $shock_type. Response code: $status_code"
          echo "Response body: $body"
          exit 1
        fi
